use super::*;

#[derive(Clone, Copy)]
#[repr(C)]
pub struct VkAllocationCallbacks {
  pub user_data: *mut c_void,
  pub allocation: PFN_vkAllocationFunction,
  pub reallocation: PFN_vkReallocationFunction,
  pub free: PFN_vkFreeFunction,
  pub internal_allocation: PFN_vkInternalAllocationNotification,
  pub internal_free: PFN_vkInternalFreeNotification,
}

#[derive(Debug, Clone, Copy)]
#[repr(C)]
pub struct VkLayerProperties {
  pub layer_name: ArrayZStr<VK_MAX_EXTENSION_NAME_SIZE>,
  pub spec_version: VkVersion,
  pub implementation_version: uint32_t,
  pub description: ArrayZStr<VK_MAX_DESCRIPTION_SIZE>,
}

#[derive(Debug, Clone, Copy)]
#[repr(C)]
pub struct VkExtensionProperties {
  pub extension_name: ArrayZStr<VK_MAX_EXTENSION_NAME_SIZE>,
  pub spec_version: uint32_t,
}

#[derive(Clone, Copy)]
#[repr(C)]
pub struct VkApplicationInfo {
  pub ty: VkStructureType,
  pub next: *const c_void,
  pub application_name: *const u8,
  pub application_version: uint32_t,
  pub engine_name: *const u8,
  pub engine_version: uint32_t,
  pub api_version: VkVersion,
}

#[derive(Clone, Copy)]
#[repr(C)]
pub struct VkInstanceCreateInfo {
  pub ty: VkStructureType,
  pub next: *const c_void,
  pub flags: VkInstanceCreateFlags,
  pub application_info: *const VkApplicationInfo,
  pub enabled_layer_count: uint32_t,
  pub enabled_layer_names: *const *const u8,
  pub enabled_extension_count: uint32_t,
  pub enabled_extension_names: *const *const u8,
}

#[derive(Debug, Clone, Copy)]
#[repr(C)]
pub struct VkPhysicalDeviceLimits {
  pub maxImageDimension1D: uint32_t,
  pub maxImageDimension2D: uint32_t,
  pub maxImageDimension3D: uint32_t,
  pub maxImageDimensionCube: uint32_t,
  pub maxImageArrayLayers: uint32_t,
  pub maxTexelBufferElements: uint32_t,
  pub maxUniformBufferRange: uint32_t,
  pub maxStorageBufferRange: uint32_t,
  pub maxPushConstantsSize: uint32_t,
  pub maxMemoryAllocationCount: uint32_t,
  pub maxSamplerAllocationCount: uint32_t,
  pub bufferImageGranularity: VkDeviceSize,
  pub sparseAddressSpaceSize: VkDeviceSize,
  pub maxBoundDescriptorSets: uint32_t,
  pub maxPerStageDescriptorSamplers: uint32_t,
  pub maxPerStageDescriptorUniformBuffers: uint32_t,
  pub maxPerStageDescriptorStorageBuffers: uint32_t,
  pub maxPerStageDescriptorSampledImages: uint32_t,
  pub maxPerStageDescriptorStorageImages: uint32_t,
  pub maxPerStageDescriptorInputAttachments: uint32_t,
  pub maxPerStageResources: uint32_t,
  pub maxDescriptorSetSamplers: uint32_t,
  pub maxDescriptorSetUniformBuffers: uint32_t,
  pub maxDescriptorSetUniformBuffersDynamic: uint32_t,
  pub maxDescriptorSetStorageBuffers: uint32_t,
  pub maxDescriptorSetStorageBuffersDynamic: uint32_t,
  pub maxDescriptorSetSampledImages: uint32_t,
  pub maxDescriptorSetStorageImages: uint32_t,
  pub maxDescriptorSetInputAttachments: uint32_t,
  pub maxVertexInputAttributes: uint32_t,
  pub maxVertexInputBindings: uint32_t,
  pub maxVertexInputAttributeOffset: uint32_t,
  pub maxVertexInputBindingStride: uint32_t,
  pub maxVertexOutputComponents: uint32_t,
  pub maxTessellationGenerationLevel: uint32_t,
  pub maxTessellationPatchSize: uint32_t,
  pub maxTessellationControlPerVertexInputComponents: uint32_t,
  pub maxTessellationControlPerVertexOutputComponents: uint32_t,
  pub maxTessellationControlPerPatchOutputComponents: uint32_t,
  pub maxTessellationControlTotalOutputComponents: uint32_t,
  pub maxTessellationEvaluationInputComponents: uint32_t,
  pub maxTessellationEvaluationOutputComponents: uint32_t,
  pub maxGeometryShaderInvocations: uint32_t,
  pub maxGeometryInputComponents: uint32_t,
  pub maxGeometryOutputComponents: uint32_t,
  pub maxGeometryOutputVertices: uint32_t,
  pub maxGeometryTotalOutputComponents: uint32_t,
  pub maxFragmentInputComponents: uint32_t,
  pub maxFragmentOutputAttachments: uint32_t,
  pub maxFragmentDualSrcAttachments: uint32_t,
  pub maxFragmentCombinedOutputResources: uint32_t,
  pub maxComputeSharedMemorySize: uint32_t,
  pub maxComputeWorkGroupCount: [uint32_t; 3],
  pub maxComputeWorkGroupInvocations: uint32_t,
  pub maxComputeWorkGroupSize: [uint32_t; 3],
  pub subPixelPrecisionBits: uint32_t,
  pub subTexelPrecisionBits: uint32_t,
  pub mipmapPrecisionBits: uint32_t,
  pub maxDrawIndexedIndexValue: uint32_t,
  pub maxDrawIndirectCount: uint32_t,
  pub maxSamplerLodBias: float,
  pub maxSamplerAnisotropy: float,
  pub maxViewports: uint32_t,
  pub maxViewportDimensions: [uint32_t; 2],
  pub viewportBoundsRange: [float; 2],
  pub viewportSubPixelBits: uint32_t,
  pub minMemoryMapAlignment: size_t,
  pub minTexelBufferOffsetAlignment: VkDeviceSize,
  pub minUniformBufferOffsetAlignment: VkDeviceSize,
  pub minStorageBufferOffsetAlignment: VkDeviceSize,
  pub minTexelOffset: int32_t,
  pub maxTexelOffset: uint32_t,
  pub minTexelGatherOffset: int32_t,
  pub maxTexelGatherOffset: uint32_t,
  pub minInterpolationOffset: float,
  pub maxInterpolationOffset: float,
  pub subPixelInterpolationOffsetBits: uint32_t,
  pub maxFramebufferWidth: uint32_t,
  pub maxFramebufferHeight: uint32_t,
  pub maxFramebufferLayers: uint32_t,
  pub framebufferColorSampleCounts: VkSampleCountFlags,
  pub framebufferDepthSampleCounts: VkSampleCountFlags,
  pub framebufferStencilSampleCounts: VkSampleCountFlags,
  pub framebufferNoAttachmentsSampleCounts: VkSampleCountFlags,
  pub maxColorAttachments: uint32_t,
  pub sampledImageColorSampleCounts: VkSampleCountFlags,
  pub sampledImageIntegerSampleCounts: VkSampleCountFlags,
  pub sampledImageDepthSampleCounts: VkSampleCountFlags,
  pub sampledImageStencilSampleCounts: VkSampleCountFlags,
  pub storageImageSampleCounts: VkSampleCountFlags,
  pub maxSampleMaskWords: uint32_t,
  pub timestampComputeAndGraphics: VkBool32,
  pub timestampPeriod: float,
  pub maxClipDistances: uint32_t,
  pub maxCullDistances: uint32_t,
  pub maxCombinedClipAndCullDistances: uint32_t,
  pub discreteQueuePriorities: uint32_t,
  pub pointSizeRange: [float; 2],
  pub lineWidthRange: [float; 2],
  pub pointSizeGranularity: float,
  pub lineWidthGranularity: float,
  pub strictLines: VkBool32,
  pub standardSampleLocations: VkBool32,
  pub optimalBufferCopyOffsetAlignment: VkDeviceSize,
  pub optimalBufferCopyRowPitchAlignment: VkDeviceSize,
  pub nonCoherentAtomSize: VkDeviceSize,
}

#[derive(Debug, Clone, Copy)]
#[repr(C)]
pub struct VkPhysicalDeviceSparseProperties {
  pub residency_standard_2d_block_shape: VkBool32,
  pub residency_standard_2d_multisample_block_shape: VkBool32,
  pub residency_standard_3d_block_shape: VkBool32,
  pub residency_aligned_mip_size: VkBool32,
  pub residency_non_resident_strict: VkBool32,
}

#[derive(Debug, Clone, Copy)]
#[repr(C)]
pub struct VkPhysicalDeviceProperties {
  apiVersion: uint32_t,
  driverVersion: uint32_t,
  vendorID: uint32_t,
  deviceID: uint32_t,
  deviceType: VkPhysicalDeviceType,
  deviceName: ArrayZStr<VK_MAX_PHYSICAL_DEVICE_NAME_SIZE>,
  pipelineCacheUUID: [uint8_t; VK_UUID_SIZE],
  limits: VkPhysicalDeviceLimits,
  sparseProperties: VkPhysicalDeviceSparseProperties,
}

#[derive(Debug, Clone, Copy)]
#[repr(C)]
pub struct VkPhysicalDeviceFeatures {
  pub robustBufferAccess: VkBool32,
  pub fullDrawIndexUint32: VkBool32,
  pub imageCubeArray: VkBool32,
  pub independentBlend: VkBool32,
  pub geometryShader: VkBool32,
  pub tessellationShader: VkBool32,
  pub sampleRateShading: VkBool32,
  pub dualSrcBlend: VkBool32,
  pub logicOp: VkBool32,
  pub multiDrawIndirect: VkBool32,
  pub drawIndirectFirstInstance: VkBool32,
  pub depthClamp: VkBool32,
  pub depthBiasClamp: VkBool32,
  pub fillModeNonSolid: VkBool32,
  pub depthBounds: VkBool32,
  pub wideLines: VkBool32,
  pub largePoints: VkBool32,
  pub alphaToOne: VkBool32,
  pub multiViewport: VkBool32,
  pub samplerAnisotropy: VkBool32,
  pub textureCompressionETC2: VkBool32,
  pub textureCompressionASTC_LDR: VkBool32,
  pub textureCompressionBC: VkBool32,
  pub occlusionQueryPrecise: VkBool32,
  pub pipelineStatisticsQuery: VkBool32,
  pub vertexPipelineStoresAndAtomics: VkBool32,
  pub fragmentStoresAndAtomics: VkBool32,
  pub shaderTessellationAndGeometryPointSize: VkBool32,
  pub shaderImageGatherExtended: VkBool32,
  pub shaderStorageImageExtendedFormats: VkBool32,
  pub shaderStorageImageMultisample: VkBool32,
  pub shaderStorageImageReadWithoutFormat: VkBool32,
  pub shaderStorageImageWriteWithoutFormat: VkBool32,
  pub shaderUniformBufferArrayDynamicIndexing: VkBool32,
  pub shaderSampledImageArrayDynamicIndexing: VkBool32,
  pub shaderStorageBufferArrayDynamicIndexing: VkBool32,
  pub shaderStorageImageArrayDynamicIndexing: VkBool32,
  pub shaderClipDistance: VkBool32,
  pub shaderCullDistance: VkBool32,
  pub shaderFloat64: VkBool32,
  pub shaderInt64: VkBool32,
  pub shaderInt16: VkBool32,
  pub shaderResourceResidency: VkBool32,
  pub shaderResourceMinLod: VkBool32,
  pub sparseBinding: VkBool32,
  pub sparseResidencyBuffer: VkBool32,
  pub sparseResidencyImage2D: VkBool32,
  pub sparseResidencyImage3D: VkBool32,
  pub sparseResidency2Samples: VkBool32,
  pub sparseResidency4Samples: VkBool32,
  pub sparseResidency8Samples: VkBool32,
  pub sparseResidency16Samples: VkBool32,
  pub sparseResidencyAliased: VkBool32,
  pub variableMultisampleRate: VkBool32,
  pub inheritedQueries: VkBool32,
}
